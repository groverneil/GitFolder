[{"/Users/neilgrover/Documents/GitFolder/fin_bot_frontend/src/index.js":"1","/Users/neilgrover/Documents/GitFolder/fin_bot_frontend/src/App.js":"2","/Users/neilgrover/Documents/GitFolder/fin_bot_frontend/src/reportWebVitals.js":"3","/Users/neilgrover/Documents/GitFolder/fin_bot_frontend/src/components/MainFrame.js":"4","/Users/neilgrover/Documents/GitFolder/fin_bot_frontend/src/components/SideFrame.js":"5"},{"size":513,"mtime":1688258137938,"results":"6","hashOfConfig":"7"},{"size":367,"mtime":1691627477958,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1688096630495,"results":"9","hashOfConfig":"7"},{"size":4022,"mtime":1691544196578,"results":"10","hashOfConfig":"7"},{"size":7072,"mtime":1691960373151,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"1oxyioz",{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"15"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/neilgrover/Documents/GitFolder/fin_bot_frontend/src/index.js",[],[],[],"/Users/neilgrover/Documents/GitFolder/fin_bot_frontend/src/App.js",["29"],[],"/Users/neilgrover/Documents/GitFolder/fin_bot_frontend/src/reportWebVitals.js",[],[],"/Users/neilgrover/Documents/GitFolder/fin_bot_frontend/src/components/MainFrame.js",["30","31","32","33","34","35","36"],[],"import \"./MainCompStyles.css\"\nimport { useState, useRef, useEffect } from \"react\";\nimport React from \"react\";\nimport axios from \"axios\"\nimport logo from \"../logo.png\"\nimport subIcon from \"../submit.png\"\nimport clearIcon from \"../clearIcon.png\"\nimport chatBotIcon from \"../chatbotIcon.png\"\nimport userIcon from \"../userbotIcon.png\"\nimport downScroll from \"../downScroll.png\"\n\nexport const MainFrame = () => {\n\n    const [x, setX] = useState([])\n\n    const userRef = useRef(null)\n\n    async function ReqHandler(e) {\n\n        e.preventDefault()\n\n        if (userRef.current.value !== \"\") {\n\n            const article = { title: e.target[0].value };\n            \n            await axios.post('/handle_data', article)\n            .then( response => {\n\n                setX(response.data)\n            })\n\n            await axios.get(\"/handle_data\")\n            .then((response) => {\n\n                setX(response.data)\n            });\n\n            userRef.current.value = \"\";\n\n    }\n    }\n\n    const OnClear = (e) => {\n\n        e.preventDefault()\n\n        axios.post(\"/reset\", {}).then(\n            \n            data => {\n\n              setX([])\n            }\n\n        )\n        \n     }\n\n     const scrollDown = (e) => {\n\n        let scroll_to_bottom = document.getElementById('window');\n\t\tscroll_to_bottom.scroll({ top: scroll_to_bottom.scrollHeight, behavior: 'smooth' });\n     }\n\n    useEffect(() => {\n\n        let scroll_to_bottom = document.getElementById('window');\n\t\tscroll_to_bottom.scroll({ top: scroll_to_bottom.scrollHeight, behavior: 'smooth' });\n\n    }, [x])\n\n\n    const conversations = Array.from(x)\n\n    return(\n\n        <div>\n            <div className=\"header\">\n                <div className=\"logo\">\n                    <img src={logo}/>\n                </div>\n                <div className=\"title\">\n                    <h1>UCSC Financial Aid FinBot</h1>\n                </div>\n            </div>\n            <div id=\"window\" className=\"chatWindow\">\n\n                    <div>\n\n                        <div className=\"chatbot\">\n                            <div className=\"chatIcon\">\n                                <img src={chatBotIcon}/>\n                            </div>\n                                <div>\n                                    <p>Hello, welcome to the UCSC financial aid office chatbot. How may I be of assistance to you today?</p>\n                                </div>\n                        </div>\n                    </div>\n\n                    {conversations.map((conversation) => (\n                        <div className=\"displayChat\" key={conversation.id}>\n                            <div className=\"user\">\n                                <div className=\"chatIcon\">\n                                    <img src={userIcon}/>\n                                </div>\n                                <p>{conversation.you}</p>\n                            </div>\n                            <div className=\"chatbot\">\n                                <div className=\"chatIcon\">\n                                    <img src={chatBotIcon}/>\n                                </div>\n                                    {conversation.Chatbot.split('\\n').map( (it, i) => <div key={'x'+i}><p>{it}</p><br/></div>)}\n                            </div>\n                        </div>\n                    ))}\n                <div className=\"scrollDown\">\n                    <button>\n                        <img src = {downScroll} onClick={scrollDown}/>\n                    </button>\n                </div>\n            </div>\n            <div className=\"MainFrame\">\n                <form onSubmit={ReqHandler}>\n                    <input type=\"text\" name=\"user_input\" className=\"user_in\" ref={userRef}/>\n                    <input type=\"image\" src={subIcon} name=\"user_sub\" className=\"user_in\"/>\n                    <input type = \"image\" src={clearIcon} className=\"clear-btn\" onClick={OnClear}/>\n                </form>\n            </div>\n        </div>\n        \n    )\n\n\n}\n\nexport default MainFrame;","/Users/neilgrover/Documents/GitFolder/fin_bot_frontend/src/components/SideFrame.js",["37","38","39","40","41","42","43","44","45","46","47"],[],{"ruleId":"48","severity":1,"message":"49","line":3,"column":8,"nodeType":"50","messageId":"51","endLine":3,"endColumn":17},{"ruleId":"52","severity":1,"message":"53","line":79,"column":21,"nodeType":"54","endLine":79,"endColumn":38},{"ruleId":"52","severity":1,"message":"53","line":91,"column":33,"nodeType":"54","endLine":91,"endColumn":57},{"ruleId":"52","severity":1,"message":"53","line":103,"column":37,"nodeType":"54","endLine":103,"endColumn":58},{"ruleId":"52","severity":1,"message":"53","line":109,"column":37,"nodeType":"54","endLine":109,"endColumn":61},{"ruleId":"52","severity":1,"message":"53","line":117,"column":25,"nodeType":"54","endLine":117,"endColumn":71},{"ruleId":"52","severity":1,"message":"55","line":124,"column":21,"nodeType":"54","endLine":124,"endColumn":92},{"ruleId":"52","severity":1,"message":"55","line":125,"column":21,"nodeType":"54","endLine":125,"endColumn":100},{"ruleId":"48","severity":1,"message":"56","line":15,"column":12,"nodeType":"50","messageId":"51","endLine":15,"endColumn":23},{"ruleId":"48","severity":1,"message":"57","line":15,"column":25,"nodeType":"50","messageId":"51","endLine":15,"endColumn":39},{"ruleId":"58","severity":1,"message":"59","line":77,"column":26,"nodeType":"60","messageId":"61","endLine":77,"endColumn":28},{"ruleId":"62","severity":1,"message":"63","line":151,"column":8,"nodeType":"64","endLine":151,"endColumn":11,"suggestions":"65"},{"ruleId":"52","severity":1,"message":"53","line":161,"column":17,"nodeType":"54","endLine":161,"endColumn":40},{"ruleId":"52","severity":1,"message":"53","line":174,"column":33,"nodeType":"54","endLine":174,"endColumn":79},{"ruleId":"52","severity":1,"message":"53","line":190,"column":37,"nodeType":"54","endLine":190,"endColumn":61},{"ruleId":"52","severity":1,"message":"53","line":203,"column":41,"nodeType":"54","endLine":203,"endColumn":62},{"ruleId":"52","severity":1,"message":"53","line":209,"column":41,"nodeType":"54","endLine":209,"endColumn":65},{"ruleId":"52","severity":1,"message":"53","line":224,"column":33,"nodeType":"54","endLine":224,"endColumn":74},{"ruleId":"52","severity":1,"message":"53","line":227,"column":33,"nodeType":"54","endLine":227,"endColumn":75},"no-unused-vars","'MainFrame' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","<input> elements with type=\"image\" must have a text alternative through the `alt`, `aria-label`, or `aria-labelledby` prop.","'chatDisplay' is assigned a value but never used.","'setChatDisplay' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isChatActive'. Either include it or remove the dependency array.","ArrayExpression",["66"],{"desc":"67","fix":"68"},"Update the dependencies array to be: [isChatActive, x]",{"range":"69","text":"70"},[3650,3653],"[isChatActive, x]"]